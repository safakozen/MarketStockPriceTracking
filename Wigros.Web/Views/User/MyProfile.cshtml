@using Wigros.Web.Models
@model User
@{
    ViewBag.Title = "MyProfile";
    User user = (User)HttpContext.Current.Session["CurrentUser"];
    string atSymbole = "@";


}

<main id="main" class="main">

    <div class="pagetitle">
        <h1>Profili Düzenle</h1>
            </div><!-- End Page Title -->

    <section class="section profile">
        <div class="row">
            <div class="col-xl-12">
                <div class="card-body">
                    @if (Model.IsAdmin == true)
                    {
                        <br />
                        <a href="/user/create/" class="btn btn-primary"><i class="bi bi-plus-lg me-1"></i> Yeni Kullanıcı Ekle</a>
                        <a href="/user/index/" class="btn btn-warning"><i class="ri-account-circle-fill"></i> Kullanıcıları Görüntüle</a>
                        <a href="/user/delete/@Model.Id" class="btn btn-danger"><i class="bi bi-trash me-1"></i> Kullanıcıyı Sil</a>
                        <hr />
                    }

                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">Profil Bilgileri</h5>

                            @using (Html.BeginForm("MyProfile", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
                            {

                                @Html.ValidationSummary(false)
                                @Html.HiddenFor(model => model.Id)
                                <form>



                                    <div class="row mb-3">
                                        <label for="inputText" class="col-sm-2 col-form-label">Profil Fotoğrafı</label>
                                        <div class="col-sm-10">
                                            @Html.HiddenFor(model => model.ProfileImage)

                                            @{
                                                if (Model.ProfileImage != null)
                                                {
                                                    var base64 = Convert.ToBase64String(Model.ProfileImage);
                                                    var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                                                    <img src="@imgSrc" alt="Profile" width="150px"><hr />
                                                }
                                            }
                                            <input type="file" class="form-control " name="ProfileImage" id="ProfileImage" />
                                        </div>
                                    </div>


                                    <div class="row mb-3">
                                        <label for="inputText" class="col-sm-2 col-form-label">İsim Soyisim</label>
                                        <div class="col-sm-10">
                                            @Html.EditorFor(model => model.Fullname, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Fullname, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="row mb-3">
                                        <label for="inputText" class="col-sm-2 col-form-label">Kullanıcı Adı</label>
                                        <div class="col-sm-10">
                                            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="row mb-3">
                                        @Html.LabelFor(model => model.Email, "Email", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-sm-10">
                                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="row mb-3">
                                        @Html.LabelFor(model => model.PhoneNumber, "Telefon", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-sm-10">
                                            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="row mb-3" hidden="hidden">
                                        @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-sm-10">
                                            @Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="row mb-3" hidden="hidden">
                                        @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-sm-10">
                                            @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="row mb-3" hidden="hidden">
                                        @Html.LabelFor(model => model.IsAdmin, htmlAttributes: new { @class = "control-label col-md-2" })

                                        <div class="col-sm-10">
                                            @Html.EditorFor(model => model.IsAdmin, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.IsAdmin, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="row mb-3">
                                        @Html.LabelFor(model => model.Password, "Parola", htmlAttributes: new { @class = "control-label col-md-2" })

                                        <div class="col-sm-10">
                                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="row mb-3">
                                        <label class="col-sm-2 col-form-label">Onayla</label>
                                        <div class="col-sm-10">
                                            <button type="submit" class="btn btn-primary">Onayla</button>
                                        </div>
                                    </div>
                                </form>
                            }
                        </div>
                    </div>
                </div>
        </div>
    </section>
</main>

